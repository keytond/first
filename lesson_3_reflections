When would you want to use a remote repository rather than keeping all your work local?

Remote repos are great if you're editing a project from multiple devices or collaborating with others. They also give you offsite storage as a backup and make code more easily discoverable.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
It's always nice to have control over what's going where. If you're collaborating with other developers, you might not want to pull their code automatically. 
On large projects, you might only want to pull files that relate to your piece of the project


Describe the differences between forks, clones, and branches. When would you use one instead of another?
Branches are handy when experimenting with new types of code or making changes you're not sure will be incorporated into the main project. 
Clones work to keep your code up-to-date and manage your own copies. 
Forks are perfect if you're going to play with someone else's git-stored code on your own.

What is the benefit of having a copy of the last known state of the remote stored locally?
This allows to to compare the remote with the current local copy.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
It's tough to collaborate on code but it seems like github handles a lot of the things that typically cause big errors, even if it does add some overhead.
Sometimes sharing files on dirs or via email would be easier for one-time distribution, collaboration, or reviews, but long-term collaboration and effective 
division of effort probably require something like github to be effective.

